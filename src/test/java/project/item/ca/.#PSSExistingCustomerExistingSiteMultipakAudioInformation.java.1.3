

package pss.forms.mcecsmallbiz;

import java.util.ArrayList;

import org.junit.Test;
import org.openqa.selenium.WebDriver;

import pss.modules.PSSAudioInformationModule;
import pss.modules.PSSSelectCustomerModule;

import com.google.inject.Inject;
import common.GenericSeleniumTest;

import data.bundle.TestPropertyBundle;
/**
 * Audio Info Module
 * @author Clayton (clachan)
 *
 */

public class PSSExistingCustomerExistingSiteMultipakAudioInformation extends GenericSeleniumTest{

	@Inject
	WebDriver driver;
	TestPropertyBundle properties;
	PSSSelectCustomerModule selectCustomerPage;
	PSSAudioInformationModule audioModule;
	
	
	
	@Inject protected void init(TestPropertyBundle properties) {
		this.properties = properties;
		selectCustomerPage = new PSSSelectCustomerModule(driver, properties);
		audioModule = new PSSAudioInformationModule(driver, properties);
	}
	
	
	
	@Test
	public void testSelectionBox() 
	{
		//open page, send customer information, then send error messages for testing
		selectCustomerPage.goToStartPage(properties.strings.get("pssformsfulldep.url"))
		.isExistingCustomer(true)
		.fillExisingCustomerFields();
		
		//List of the radio button labels
		ArrayList<String> defaultAudioLabelList = (ArrayList<String>) properties.strings.getList("audio.information.module.defaultLabels");
		ArrayList<String> mp8AudioLabelList = (ArrayList<String>) properties.strings.getList("audio.information.module.mp8Labels");
		ArrayList<String> mp85AudioLabelList = (ArrayList<String>) properties.strings.getList("audio.information.module.mp85labels");
		ArrayList<String> thirdPartyTelephonyAudioLabelList = (ArrayList<String>) properties.strings.getList("audio.information.module.thirdPartyTelephonyLabels");
		
		
		
		//
		//MUST HAVE FILL EXISTING CUSTOMER FIELDS BEFORE RUNNING
		//Don't this is properly done update later.
		//
		audioModule
		.checkDefaultAudioLabels(defaultAudioLabelList,properties.strings.get("audio.information.module.allLablels.xpath"))
		.checkAudioInformationMP8AudioLabels(mp8AudioLabelList, null)
		.checkAudioInformationMP85AudioLabels(mp85AudioLabelList, null)
		.checkAudioInformation3rdPartyTelephony(thirdPartyTelephonyAudioLabelList, null)
		.checkErrorMessagesLabels(null,null);
			//.selesctLabelsAndVerify(listOfLabels, xpathString);
	}
}
